LOGGIN::
logging.basicConfig(filename="log.log", level=logging.WARNING)
fh = logging.FileHandler("logme.txt")
form = logging.Formatter('%(name)s - %(levelname)s : %(asctime)s - %(message)s')
fh.setFormatter(form)
logger = logging.getLogger("Bot")
handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.DEBUG)
handler.setFormatter(form)
logger.addHandler(fh)
logger.addHandler(handler)
logger.setLevel(logging.DEBUG)




#### TASK im Hintergrund laufen lassen #########
   def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        # Task im Hintergrund laufen lassen
        self.bg_task = self.loop.create_task(self.my_background_task())

    async def my_background_task(self):
        await self.wait_until_ready()
        counter = 0
        channel = self.get_channel(672074818308538412)  # Channel ID
        while not self.is_closed():
            counter += 1
            await channel.send(counter)
            await asyncio.sleep(60)  # Task läuft jede 60 Sekunden
###############################################################################
###                 Nachrichten ändern
    async def on_message(self, message):
        print(message.author.id)

        if message.content.startswith('!editme'):
            msg = await message.channel.send('10')
            await asyncio.sleep(3.0)
            await msg.edit(content='40')
###############################################################################

